#include <Wire.h>
#include <SPI.h>
#include "ArduCAM.h"
#include "memorysaver.h"

#define CS_PIN 10  // Adjust based on your wiring
ArduCAM myCAM(OV2640, CS_PIN);

void setup() {
    Serial.begin(115200);
    Wire.begin();
    SPI.begin();
    pinMode(CS_PIN, OUTPUT);
    digitalWrite(CS_PIN, HIGH);

    Serial.println("Initializing camera...");
    delay(100);

    // SPI Test to confirm communication
    myCAM.write_reg(ARDUCHIP_TEST1, 0x55);
    if (myCAM.read_reg(ARDUCHIP_TEST1) != 0x55) {
        Serial.println("SPI connection failed!");
        while (1);
    }
    Serial.println("✅ SPI communication successful!");

    // Reset and initialize camera
    myCAM.write_reg(0x07, 0x80); // Software reset
    delay(100);
    myCAM.write_reg(0x07, 0x00); // Exit reset
    delay(100);

    // Declare VID and PID variables
    uint8_t vid, pid;

    // Read camera module ID
    myCAM.wrSensorReg8_8(0xff, 0x01); // Select sensor register bank
    myCAM.rdSensorReg8_8(0x0A, &vid);
    myCAM.rdSensorReg8_8(0x0B, &pid);

    Serial.print("VID: 0x"); Serial.println(vid, HEX);
    Serial.print("PID: 0x"); Serial.println(pid, HEX);

    if ((vid != 0x26) || (pid != 0x42)) {  // Expected values for OV2640
        Serial.println("❌ Camera module not detected!");
        while (1);
    }
    Serial.println("✅ Camera module detected!");

    myCAM.set_format(JPEG);
    myCAM.InitCAM();
    myCAM.OV2640_set_JPEG_size(OV2640_320x240);  // Set resolution
    delay(1000);
    Serial.println("✅ Camera initialized successfully!");
}

void loop() {
    Serial.println("📸 Capturing image...");
    myCAM.flush_fifo();
    myCAM.clear_fifo_flag();
    myCAM.start_capture();

    while (!(myCAM.read_reg(ARDUCHIP_TRIG) & CAP_DONE_MASK));
    Serial.println("✅ Capture complete!");

    uint32_t fifoLength = myCAM.read_fifo_length();
    if (fifoLength == 0 || fifoLength > 500000) {
        Serial.println("⚠️ FIFO buffer error! Resetting...");
        myCAM.flush_fifo();
        return;
    }
    Serial.print("📏 FIFO length: ");
    Serial.println(fifoLength);

    // Send start marker
    Serial.println("---START---");

    // Send image data
    myCAM.CS_LOW();
    for (uint32_t i = 0; i < fifoLength; i++) {
        uint8_t temp = myCAM.read_fifo();
        Serial.write(temp);
    }
    myCAM.CS_HIGH();

    // Send end marker
    Serial.println("---END---");

    delay(1000);  // Delay before capturing next frame
}

